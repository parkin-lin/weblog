---
import { getCollection } from 'astro:content'
import { SITE_TITLE, SITE_DESCRIPTION } from '@/consts'
import BaseHead from '@/components/BaseHead.astro'
import Header from '@/components/Header.astro'
import Pagination from '@/components/Pagination.astro'
import Footer from '@/components/Footer.astro'
import FormattedDate from '@/components/FormattedDate.astro'

export async function getStaticPaths({ paginate }) {
  const posts = (await getCollection('blog')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  )

  return paginate(posts, { pageSize: 3 })
}
const { page } = Astro.props

const postsByYear = page.data.reduce((acc, post) => {
  const year = post.data.pubDate.getFullYear().toString()
  ;(acc[year] ??= []).push(post)
  return acc
}, Object.create(null))

const years = Object.keys(postsByYear).sort((a, b) => parseInt(b) - parseInt(a))
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      ul {
        --uno: m0 p0 flex flex-wrap flex-col list-none;
      }
      ul li {
        transition: 0.3s ease;
        /* width: calc(50% - 1rem); */
        & a {
          --uno: p1;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <div class="flex flex-col gap-y-8">
        {
          years.map((year) => (
            <section class="flex flex-col">
              <h2>{year}</h2>
              <ul>
                {postsByYear[year].map((post) => (
                  <li>
                    <span>
                      <FormattedDate date={post.data.pubDate} />
                    </span>
                    <a href={`/blog/${post.id}/`}>
                      <strong>{post.data.title}</strong>
                    </a>
                  </li>
                ))}
              </ul>
            </section>
          ))
        }
      </div>
      <Pagination page={page} />
    </main>
    <Footer />
  </body>
</html>
